///MAINCONTROLLER///

{
    #[Route('/', name: 'app_animal')]
    public function index(): Response
    {
        return $this->render('animal/index.html.twig', [
        ]);
    }

    ///login ///

    #[Route("/login", name: "login")]
    public function login(AuthenticationUtils $authenticationUtils): Response
    {
        $error = $authenticationUtils->getLastAuthenticationError();
        $lastUsername = $authenticationUtils->getLastUsername();
        return $this->render('animal/login.html.twig', [
                'last_username' => $lastUsername,
                'error' => $error,
            ]
        );
    }

    #[Route("/logout", name: "logout")]
    public function logout(): Response
    {
        return $this->redirectToRoute('app_animal');

    }

    #[Route("/redirect", name: "redirect")]

    public function redirectAction(Security $security)
    {
        if ($security->isGranted('ROLE_ADMIN')) {
            return $this->redirectToRoute('app_admin');
        }
        if ($security->isGranted('ROLE_MEMBER')) {
            return $this->redirectToRoute('app_member');
        }

        return $this->redirectToRoute('app_animal');
    }

}


//// BASE ///

  {% block stylesheets %}
            <link href="{{ asset("/style.css") }}" rel="stylesheet">
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>
        {% endblock %}
    </head>
    <body>
    {% block navbar %}
        <div class="navbar">
            <a href="{{ path('app_adventure') }}">Home</a>
            <ul class="nav navbar-nav navbar-right">
                {% if is_granted('IS_AUTHENTICATED_FULLY') %}
                    <li><a href="{{ path('logout') }}"><span class="glyphicon glyphicon-log-in"></span> Uitloggen</a></li>
                {% else %}
                    <li><a href="{{ path('login') }}"><span class="glyphicon glyphicon-log-in"></span> Inloggen</a></li>
                {% endif %}
            </ul>
        </div>

        {% block body %}

        {% endblock %}
        {% for label, messages in app.flashes %}
            {% for message in messages %}
                <div class="alert alert-{{ label }}">
                    {{ message }}
                </div>
            {% endfor %}
        {% endfor %}
    {% endblock %}


///style.stylesheet////

body {margin:0;}

.navbar {
    overflow: hidden;
    background-color: #333;
    position: fixed;
    top: 0;
    width: 100%;
}

.navbar a {
    float: left;
    display: block;
    color: #f2f2f2;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
    font-size: 17px;
}

.navbar a:hover {
    background: #ddd;
    color: black;
}

.main {
    padding: 16px;
    margin-top: 30px;
    height: 1500px; /* Used in this example to enable scrolling */
}



/// LOGIN TWIG///

{% block body %}
    {% if error %}
    <div>{{ error.messageKey|trans(error.messageData,'security') }}</div>
    {% endif %}
    <div class="container">
        <div class="row">
            <h1 class="text-left fw-light text-align-left">Inloggen</h1>
            <p class="text-left fw-dark">vul je email en wachtwoord in.</p>
            <form action="{{ path('login') }}" method="post">
                <div class="mb-3">
                    <label for="exampleInputEmail1" class="form-label">Email address</label>
                    <input type="email" class="form-control" id="exampleInputEmail1" name="_username" value="{{ last_username }}" aria-describedby="emailHelp">
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">Password</label>
                    <input type="password" class="form-control" id="password" name="_password">
                </div>
                <br>
                <input type="hidden" name="_target_path" value="/redirect"/>
                <button type="submit" class="btn btn-primary">Submit</button>
            </form>
        </div>
    </div>
{% endblock %}


///MemberController///

   #[Route('/member', name: 'app_member')]
    public function index(StoryRepository $storyRepository): Response
    {
        $userName=$this->getUser();
        $story = $storyRepository->findAll();
        return $this->render('member/index.html.twig', [
            'user' => $userName,
            'stories'=>$story

        ]);
    }

    #[Route("/add", name: "app_add")]
    public function inserting(Request $request, EntityManagerInterface $entityManager): Response
    {
        $add = new Story();

        $form = $this->createForm(AddStoryType::class, $add);
        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
            $add = $form->getData();
            $entityManager->persist($add);
            $entityManager->flush();
            $this->addFlash('success', 'Successfully added');

            return $this->redirectToRoute('app_member');

        }
        return $this->renderForm('member\insert.html.twig', [
                'form' => $form
            ]
        );
    }


    #[Route("/update/{id}", name: "app_update")]
    public function update(Request $request, EntityManagerInterface $entityManager,int $id): Response
    {
        $updatin = $entityManager->getRepository(Story::class)->find($id);

        $form = $this->createForm(AddStoryType::class, $updatin);
        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
            $add = $form->getData();

            $entityManager->persist($add);
            $entityManager->flush();

            $this->addFlash('success', 'Informatie gewijzigd');

            return $this->redirectToRoute('app_member');

        }
        return $this->renderForm('member\update.html.twig', [
                'form' => $form
            ]
        );
    }


    //// Member.twig ////
    
  {% block body %}
        <h1 class="text-center fw-light">Welkom {{ user.fname }} </h1>
        <p class="text-center fw-dark">Dit is de member pagina.</p>
        <h4>linked met {{ user.master }}</h4>
    <h3>Mijn verhalen</h3>
        <table class="table">
            <thead>
            <tr>
                <th class="bg-custom">Title:</th>
                <th class="bg-custom">Beschrijving:</th>
                <th class="bg-custom">date:</th>
            </tr>
            {% for story in stories %}
                <tr>
                    <td>{{ story.title }}</td>
                    <td>{{ story.description }}</td>
                    <td>{{ story.date |date("d,m,Y")}}</td>
                    <td><a class="btn btn-warning" href="{{ path('app_update',{id: story.id }) }}">Update</a></td>

                </tr>

            {% endfor %}
        </table>
    <td><a class="btn btn-success" href="{{ path('app_add') }}">Toevoegen</a></td>
{% endblock %}


    ///AdminController///
    
   #[Route('/admin', name: 'app_admin')]
    public function index(StoryRepository $storyRepository): Response
    {
        $userName=$this->getUser();
        $story = $storyRepository->findAll();
        return $this->render('admin/index.html.twig', [

            'user' => $userName,
            'stories'=>$story,

        ]);
    }
    #[Route('/delete/{id}', name: 'app_delete')]
    public function deleteUser(EntityManagerInterface $entityManager, int $id): Response
    {
        $delete = $entityManager->getRepository(Story::class)->find($id);
        if  (!$delete){
            throw $this->createNotFoundException(
                'No product found for id' . $id

            );
        }
        $entityManager->remove($delete);
        $entityManager->flush();
        $this->addFlash('warning', 'Story Deleted');
        return $this->redirectToRoute('app_admin');
    }



/// Admin.twig /// 

{% block body %}
    <h1 class="text-center fw-light">Welkom {{ user.fname }} </h1>
    <p class="text-center fw-dark">Dit is de admin pagina.</p>
    <h4>linked met {{ user.master }}</h4>
    <h3>Mijn verhalen</h3>
    <table class="table">
        <thead>
        <tr>
            <th class="bg-custom">Title:</th>
            <th class="bg-custom">Beschrijving:</th>
            <th class="bg-custom">date:</th>
            <th class="bg-custom">Wie:</th>

        </tr>
        {% for story in stories %}
            <tr>
                <td>{{ story.title }}</td>
                <td>{{ story.description }}</td>
                <td>{{ story.date |date("d,m,Y")}}
                <td>{{ story.user.fname }}

                <td><a class="btn btn-danger" href="{{ path('app_delete',{id: story.id }) }}">delete</a></td>

            </tr>

        {% endfor %}
    </table>
{% endblock %}

//// Insert Update Form ///

{% extends 'member/memberbase.html.twig' %}
{% block body %}
    <div class="container">
<h1>Update:</h1>
{{ form(form) }}
    </div>
{% endblock %}




/// Form Commands///
->add('user', EntityType::class,[
                'class' => 'App\Entity\User',
                'choice_label' => 'master',
            ])
->add('submit', SubmitType::class)
->add('date', DateType::class)

form_themes: ['bootstrap_5_layout.html.twig']

 php bin/console security:hash-password
 symfony console make:controller 

/////









